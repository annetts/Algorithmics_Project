Introduction
The goal of this project is to compare the depth of trees generated by MiniMax algorithm implemented for checkers board game. Alpha-beta pruning search algorithm is used to reduce the number of the branches in the search tree that is evaluated by MiniMax algorithm. The project includes a web visualization to display two chosen Checkers algorithms in action. Random checkers algorithm is also implemented to test the MiniMax algorithm against a controlled novice player.

Random algorithm
The random algorithm in this case chooses the next move without any knowledge of the previous move or the current situation. Also the opponents and its own button placement is unknown to the algorithm.   

MiniMax algorithm
The MiniMax algorithm evaluates the players current situation by generating all the possible moves, then assesses each possible move with a value. The value is givin The next move with the best value will be selected and executed.  

Alpha-beta algorithm
The concept of this algorithm is almost the same as in the MiniMax with a difference in the search algorithm which eliminates less promising branches of the tree where the player loses the game with the highest probability. Cutting those branches will decrease the algorithm search time.

Conclusion
